[{"/home/rahul/MERN_WEBSITE/netlify_deploy/src/App.js":"1","/home/rahul/MERN_WEBSITE/netlify_deploy/src/context/UsesrContext.js":"2","/home/rahul/MERN_WEBSITE/netlify_deploy/src/components/Home/Home.js":"3","/home/rahul/MERN_WEBSITE/netlify_deploy/src/components/Home/Comments.js":"4","/home/rahul/MERN_WEBSITE/netlify_deploy/src/Router.js":"5","/home/rahul/MERN_WEBSITE/netlify_deploy/src/components/misc/Navbar.js":"6","/home/rahul/MERN_WEBSITE/netlify_deploy/src/util/domain.js":"7","/home/rahul/MERN_WEBSITE/netlify_deploy/src/index.js":"8","/home/rahul/MERN_WEBSITE/netlify_deploy/src/components/auth/Register.js":"9","/home/rahul/MERN_WEBSITE/netlify_deploy/src/components/Home/Post.js":"10","/home/rahul/MERN_WEBSITE/netlify_deploy/src/components/Home/PostUploader.js":"11"},{"size":419,"mtime":1614423484743,"results":"12","hashOfConfig":"13"},{"size":614,"mtime":1614603396027,"results":"14","hashOfConfig":"13"},{"size":2962,"mtime":1614603351830,"results":"15","hashOfConfig":"13"},{"size":398,"mtime":1614447605044,"results":"16","hashOfConfig":"13"},{"size":589,"mtime":1614337040857,"results":"17","hashOfConfig":"13"},{"size":1112,"mtime":1614603402731,"results":"18","hashOfConfig":"13"},{"size":166,"mtime":1614486668848,"results":"19","hashOfConfig":"13"},{"size":165,"mtime":1614336831853,"results":"20","hashOfConfig":"13"},{"size":1622,"mtime":1614603348542,"results":"21","hashOfConfig":"13"},{"size":3418,"mtime":1614603340062,"results":"22","hashOfConfig":"13"},{"size":1607,"mtime":1614487569670,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"co9vrd",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rahul/MERN_WEBSITE/netlify_deploy/src/App.js",[],"/home/rahul/MERN_WEBSITE/netlify_deploy/src/context/UsesrContext.js",[],["49","50"],"/home/rahul/MERN_WEBSITE/netlify_deploy/src/components/Home/Home.js",["51"],"/home/rahul/MERN_WEBSITE/netlify_deploy/src/components/Home/Comments.js",[],"/home/rahul/MERN_WEBSITE/netlify_deploy/src/Router.js",[],["52","53"],"/home/rahul/MERN_WEBSITE/netlify_deploy/src/components/misc/Navbar.js",[],"/home/rahul/MERN_WEBSITE/netlify_deploy/src/util/domain.js",[],"/home/rahul/MERN_WEBSITE/netlify_deploy/src/index.js",[],"/home/rahul/MERN_WEBSITE/netlify_deploy/src/components/auth/Register.js",[],"/home/rahul/MERN_WEBSITE/netlify_deploy/src/components/Home/Post.js",["54"],"/* eslint-disable jsx-a11y/alt-text */\nimport React ,{useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport \"./Post.scss\";\nimport Comment from './Comments'\nimport domain from '../../util/domain';\n\nfunction Post(props){\n    const [comments, setComments] = useState([]);\n    const user = props.user;\n    const [writeComment, setWriteComment] = useState(\"\");\n\n    const[likeBtnState, setLikeBtnState] = useState(\"btn-not-like\")\n    const [likes, setLikes] = useState(props.post.likes.length);\n\n    useEffect(() => {\n        // get all the posts here\n        if(user){\n            getComments();\n        }\n        \n    },[]);\n\n    //to get all the posts\n    async function getComments(){\n\n        const commentsRes = await axios.get(domain+\"/comments/\"+props.post._id);\n        if (props.post.likes.includes( await user.userId)){\n            setLikeBtnState(\"btn-like\");\n        };\n        //console.log(commentsRes.data)\n        setComments(commentsRes.data)\n    }\n\n    async function deletePost(){\n        await axios.delete(domain+'/posts/'+props.post._id);\n\n        props.getPosts();\n    };\n\n    function renderComments(){\n        return comments.map((comment, i)=>{\n            return <Comment key={i} comment={comment} getComments={getComments} user={user}/>\n        })\n    }\n\n    function commentHandler(event){\n        setWriteComment(event.target.value);\n    }\n\n    async function postComment(){\n        setWriteComment(\"\");\n        const commentData= {\n            \"comment\":writeComment,\n            \"postId\":props.post._id\n        }\n\n        await axios.post(domain+\"/comments/\"+props.post._id, commentData).then(res=>console.log(res));\n        getComments();\n        \n    }\n\n    async function changeLikeBtnState(){\n        const likeData = {\n            \"postId\":props.post._id,\n            \"userId\":user.userId\n        }\n        if(likeBtnState===\"btn-not-like\"){\n            setLikeBtnState(\"btn-like\");\n            await axios.put(domain+\"/posts/like\",likeData);\n            props.getPosts();\n            setLikes(likes+1);\n        }\n        else if(likeBtnState===\"btn-like\"){\n            setLikeBtnState(\"btn-not-like\");\n            await axios.put(domain+\"/posts/unlike\",likeData);\n            props.getPosts();\n            setLikes(likes-1);\n        };\n        \n    }\n\n\n    return <div className=\"post\">\n        <div className=\"left\">\n        {props.post.email && <h2 className=\"name\"><Link to=\"#\">{props.post.email}</Link></h2>}\n        <img className=\"image\" src={domain+\"/\"+props.post.postImage} height=\"400\" width=\"300\"></img>\n        {user && (<button className={likeBtnState} onClick={changeLikeBtnState}>Likes :{likes}</button>)}\n        {props.post.desc && <h2 className=\"desc\">{props.post.desc}</h2>}\n        {props.defaultUrl!==domain+'/posts/' &&<button className=\"btn-delete\" onClick={deletePost}>Delete Post</button>}\n        \n        </div>\n        <div className=\"right\">\n                <div className=\"comments\">Comments\n                    {renderComments()}\n                </div>\n                {user && (<div className=\"add-comments\">Add Comments\n                    <textarea className=\"comment-input\" onChange={commentHandler} value={writeComment} />\n                    <button className=\"btn-comment\" onClick={postComment}>Post Comment</button>\n                </div>)}\n        </div>\n    </div>\n}\n\nexport default Post;","/home/rahul/MERN_WEBSITE/netlify_deploy/src/components/Home/PostUploader.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":30,"column":7,"nodeType":"61","endLine":30,"endColumn":21,"suggestions":"62"},{"ruleId":"55","replacedBy":"63"},{"ruleId":"57","replacedBy":"64"},{"ruleId":"59","severity":1,"message":"65","line":23,"column":7,"nodeType":"61","endLine":23,"endColumn":9,"suggestions":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.","ArrayExpression",["69"],["67"],["68"],"React Hook useEffect has missing dependencies: 'getComments' and 'user'. Either include them or remove the dependency array.",["70"],"no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},"Update the dependencies array to be: [defaultPosts, getPosts]",{"range":"75","text":"76"},"Update the dependencies array to be: [getComments, user]",{"range":"77","text":"78"},[1232,1246],"[defaultPosts, getPosts]",[673,675],"[getComments, user]"]